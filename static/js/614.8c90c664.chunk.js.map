{"version":3,"file":"static/js/614.8c90c664.chunk.js","mappings":"uLACA,QAA0B,yB,aCG1B,MASA,EATgBA,IAAuB,IAAtB,QAACC,EAAO,MAAEC,GAAMF,EAC7B,OACIG,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAWC,EAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAAD,SAAMN,KACNE,EAAAA,EAAAA,MAAA,OAAAI,SAAA,CAAK,UAAQL,OACV,E,cCRf,QAAwB,0BAAxB,EAAwE,wCCkBxE,EAXmBF,IAAiB,IAAhB,GAACS,EAAE,KAAEC,GAAKV,EAC1B,OACIG,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAA2BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKG,IAAKC,EAAMP,UAAWC,EAAcO,OAAQ,GAAIC,IAAI,WACzDN,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,GAAE,GAAAC,OAAKR,GAAKF,UACjBJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,CAAMG,EAAK,WAEb,ECdd,EAAmC,kC,4CCOnC,MAAMQ,GAAaC,EAAAA,EAAAA,GAAiB,GAe9BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EAbLrB,IAAqB,IAApB,aAACuB,GAAavB,EAC/B,OACIG,EAAAA,EAAAA,MAAA,QAAME,UAAWC,EACXkB,SAAUD,EAAahB,SAAA,EACzBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACXjB,KAAM,cACNkB,SAAU,CAACC,EAAAA,EAAUX,GAC5BY,YAAY,wBACZtB,EAAAA,EAAAA,KAAA,UAAQuB,KAAM,SAASxB,SAAC,mBACrB,IAyCf,EAnCgByB,IAAsC,IAArC,QAACC,EAAO,SAAEC,EAAQ,WAAEC,GAAWH,EAO5C,OACI7B,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACIJ,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAwBC,SAAA,EAEpCC,EAAAA,EAAAA,KAAA,OAAAD,SACI0B,EAAQI,KAAIpC,IAERO,EAAAA,EAAAA,KAAC8B,EAAU,CACC7B,GAAIR,EAAQQ,GACZC,KAAMT,EAAQS,MAFTT,EAAQQ,SAMjCD,EAAAA,EAAAA,KAAA,OAAAD,SACI2B,EAASG,KAAIpC,IACTO,EAAAA,EAAAA,KAAC+B,EAAO,CACCtC,QAASA,EAAQA,QACjBC,MAAOD,EAAQC,OAFVD,EAAQQ,YAOlCD,EAAAA,EAAAA,KAACY,EAAgB,CAACI,SA1BRgB,IACdL,EAAWK,EAAYC,YAAY,MA0BhC,E,sBCvDJ,MAAMC,EAAcC,GAASA,EAAMC,aAAaV,SAC1CW,EAAiBF,GAASA,EAAMC,aAAaH,Y,cCkB1D,MAeA,GAAeK,EAAAA,EAAAA,KAEXC,EAAAA,EAAAA,KAjBqBJ,IACd,CACHV,SAASe,EAAAA,EAAAA,IAAWL,GACpBT,SAAUQ,EAAYC,GACtBF,YAAaI,EAAeF,MAaP,CAACR,WAAU,OAFxC,CAGEc,E","sources":["webpack://social-network/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://social-network/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.jsx","redux/selectors/messages-selectors.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__9rRiz\"};","import Card from \"../../UI/Card/Card\";\r\nimport React from \"react\";\r\nimport styles from \"./Message.module.css\"\r\n\r\nconst Message = ({message, likes}) => {\r\n    return (\r\n        <Card className={styles.message}>\r\n            <div>{message}</div>\r\n            <div>Likes: {likes}</div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"DialogItem_image__oltNc\",\"dialogItemContainer\":\"DialogItem_dialogItemContainer__YzprZ\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Message from \"../Message/Message\";\r\nimport logo from \"../../../assets/images/logo.png\";\r\nimport styles from './DialogItem.module.css'\r\n\r\n\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    return (\r\n        <div className={styles.dialogItemContainer}>\r\n            <img src={logo} className={styles.image} height={40} alt=\"image\"/>\r\n            <NavLink to={`${id}`} >\r\n                <div>{name}:</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogsContainer\":\"Dialogs_dialogsContainer__VTW-S\"};","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\n\r\nconst maxLength5 = maxLengthCreator(5)\r\n\r\nconst MessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form className={styles.dialogsContainer}\r\n              onSubmit={handleSubmit}>\r\n            <Field component={TextArea}\r\n                   name={'messageText'}\r\n                   validate={[required, maxLength5]}\r\n            placeholder=\"Enter your message\"/>\r\n            <button type={\"submit\"}>Send Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({form: 'message'})(MessageForm)\r\n\r\nconst Dialogs = ({dialogs, messages, addMessage}) => {\r\n\r\n\r\n    const onSubmit = (messageBody) => {\r\n        addMessage(messageBody.messageText)\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={styles.dialogsContainer}>\r\n\r\n                <div>{\r\n                    dialogs.map(message => (\r\n\r\n                        <DialogItem key={message.id}\r\n                                    id={message.id}\r\n                                    name={message.name}\r\n                        />\r\n                    ))\r\n                }</div>\r\n                <div>{\r\n                    messages.map(message => (\r\n                        <Message key={message.id}\r\n                                 message={message.message}\r\n                                 likes={message.likes}/>\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n            <MessageReduxForm onSubmit={onSubmit}/>\r\n        </>)\r\n\r\n\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n/*const Dialog = () => {\r\n    const dialogs = [\r\n        {\r\n            name: 'Alex',\r\n            message: 'Hi, how are you',\r\n            id: 1\r\n        },\r\n        {\r\n            name: 'Olha',\r\n            message: \"It's my first post\",\r\n            id: 2\r\n        },\r\n    ]\r\n\r\n    const dialogs = [\r\n        {\r\n            message: 'Hi, how are you',\r\n            likes: '3',\r\n            id: 1\r\n        },\r\n        {\r\n            message: \"It's my first post\",\r\n            likes: '5',\r\n            id: 2\r\n        },\r\n    ]\r\n\r\n    const dialogsElements = dialogs.map(dialog => <DialogItem key={dialog.id}\r\n                                                              id={dialog.id}\r\n                                                              name={dialog.name}/>)\r\n    const messagesElements = dialogs.map(message => <DialogItem key={message.id}\r\n                                                                 message={message.message}\r\n                                                                 likes={message.likes}/>)\r\n    return (\r\n        <div>\r\n            <div>{dialogsElements}</div>\r\n            <div>{messagesElements}</div>\r\n        </div>\r\n    )\r\n}*/\r\n\r\n","export const getMessages = state => state.messagesPage.messages\r\nexport const getMessageText = state => state.messagesPage.messageText\r\n","import React from \"react\";\r\nimport {addMessage} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {getMessages, getMessageText} from \"../../redux/selectors/messages-selectors\";\r\nimport {getDialogs, getDialogsSelector, getDialogsSuperSelector} from \"../../redux/selectors/profile-selectors\";\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        updateMessageText: (message) => {\r\n            dispatch(updateMessageTextActionCreator(message))\r\n        }\r\n    }\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: getDialogs(state),\r\n        messages: getMessages(state),\r\n        messageText: getMessageText(state)\r\n    }\r\n}\r\n\r\n/*\r\nconst AuthRedirectComponent = WithAuthRedirect(Dialogs);\r\n\r\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, {addMessage, updateMessageText})(AuthRedirectComponent)\r\n*/\r\n\r\nexport default compose(\r\n  /*  WithAuthRedirect,*/\r\n    connect(mapStateToProps, {addMessage})\r\n)(Dialogs)\r\n\r\n"],"names":["_ref","message","likes","_jsxs","Card","className","styles","children","_jsx","id","name","src","logo","height","alt","NavLink","to","concat","maxLength5","maxLengthCreator","MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","TextArea","validate","required","placeholder","type","_ref2","dialogs","messages","addMessage","_Fragment","map","DialogItem","Message","messageBody","messageText","getMessages","state","messagesPage","getMessageText","compose","connect","getDialogs","Dialogs"],"sourceRoot":""}