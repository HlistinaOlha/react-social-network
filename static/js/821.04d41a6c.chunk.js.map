{"version":3,"file":"static/js/821.04d41a6c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/PostListItem/PostListItem.module.css?6094","components/Profile/PostListItem/PostListItem.jsx","webpack://my-app/./src/components/Profile/PostList/PostList.module.css?441e","components/Profile/PostList/PostList.jsx","components/Profile/PostList/PostListContainer.jsx","components/Profile/ProfileItem/ProfileItemContainer.jsx","components/Profile/Profile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Profile_main__EjfeH\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"PostListItem_item__Dj27+\",\"photo\":\"PostListItem_photo__OPZWd\"};","import React from \"react\";\r\nimport styles from './PostListItem.module.css'\r\n\r\nconst PostListItem = ({message, likes}) => {\r\n\r\nreturn (\r\n    <li className={styles.item}>\r\n        <div className={styles.photo}/>\r\n        <span>{message}</span>\r\n        <span>Likes: {likes}</span>\r\n    </li>\r\n)\r\n}\r\n\r\nexport default PostListItem\r\n","// extracted by mini-css-extract-plugin\nexport default {\"submitBtn\":\"PostList_submitBtn__u0FfT\"};","import React, {PureComponent} from \"react\";\r\nimport PostListItem from \"../PostListItem/PostListItem\";\r\nimport styles from './PostList.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormControls/FormControls\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst maxLength5 = maxLengthCreator(5)\r\n\r\nconst PostForm = ({handleSubmit}) => {\r\n\r\n    return (\r\n        <form className={styles.postForm}\r\n              onSubmit={handleSubmit}>\r\n            <Field component={TextArea}\r\n                   name={'postText'}\r\n                   validate={[required, maxLength5]}\r\n            />\r\n            <button type={\"submit\"}\r\n                    className={styles.submitBtn}>Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm)\r\n\r\nconst PostList = (props) => {\r\n\r\n    let {posts, addNewPost} = props;\r\n\r\n    const onSubmit = (data) => {\r\n        addNewPost(data.postText)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>My posts</h3>\r\n            <PostReduxForm onSubmit={onSubmit}/>\r\n            <ul>\r\n                {\r\n                    [...posts].reverse().map(post => (\r\n                        <PostListItem key={post.id}\r\n                                      message={post.message}\r\n                                      likes={post.likes}/>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n\r\n","import React, {memo} from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport PostList from \"./PostList\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\n\r\n//1)CREATING CONTAINER COMPONENT\r\n\r\n/*const PostListContainer = () => {\r\n\r\n    const [store] = useOutletContext();\r\n\r\n    const addPost = () => {\r\n        store.dispatch.call(store, addPostActionCreator())\r\n    }\r\n\r\n    const updatePostText = (text) => {\r\n        store.dispatch.call(store, updatePostTextActionCreator(text))\r\n    }\r\n\r\n    return (\r\n        <PostList posts={store.getState().profilePage.posts}\r\n                  postText={store.getState().profilePage.postText}\r\n                  updatePostText={updatePostText}\r\n                  addPost={addPost}/>\r\n    )\r\n}*/\r\n\r\n//2)CREATING CONTAINER COMPONENT WITH CONNECT()\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        postText: state.profilePage.postText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updatePostText: (text) => {\r\n            dispatch(updatePostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst PostListContainer = connect(mapStateToProps, mapDispatchToProps)(PostList)\r\n*/\r\n\r\n//2)CREATING CONTAINER COMPONENT WITH useDispatch() AND useSelector()\r\n\r\nconst PostListContainer =  memo(() => {\r\n    const dispatch = useDispatch()\r\n\r\n    const posts = useSelector(state => state.profilePage.posts)\r\n    const postText = useSelector(state => state.profilePage.postText)\r\n\r\n    const addNewPost = (postText) => {\r\n        dispatch(addPost(postText))\r\n    }\r\n\r\n    return (\r\n        <PostList posts={posts}\r\n                  postText={postText}\r\n                  addNewPost={addNewPost}/>\r\n    )\r\n})\r\n\r\nexport default PostListContainer\r\n","import React, {Component} from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus, uploadImage} from \"../../../redux/profile-reducer\";\r\nimport ProfileItem from \"./ProfileItem\";\r\n\r\nclass ProfileItemAPI extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.id;\r\n\r\n        if (!userId) {\r\n            userId = this.props.loggedInUserId\r\n           /* if (!userId) {\r\n                this.props.history.push('/login')\r\n            }*/\r\n        }\r\n\r\n        this.props.loadProfile(userId)\r\n        this.props.loadStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return ( /*this.props.isFetching ?\r\n            <Preloader/>\r\n            :*/\r\n            <>\r\n                <button onClick={this.props.goBack}>Back</button>\r\n                <ProfileItem {...this.props} profile={this.props.profile}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ProfileItemContainer() {\r\n    const dispatch = useDispatch()\r\n\r\n    const profile = useSelector(state => state.profilePage.profile)\r\n    const currentUser = useSelector(state => state.profilePage.currentUser)\r\n    //const isFetching = useSelector(state => state.profilePage.isFetching)\r\n    const status = useSelector(state => state.profilePage.status)\r\n    const loggedInUserId = useSelector(state => state.auth.userId)\r\n    const selectedUserId = useParams().id\r\n    const isProfileCurrentUser = profile?.userId === loggedInUserId\r\n\r\n    const navigate = useNavigate();\r\n    const goBack = () => navigate(-1)\r\n\r\n    const loadProfile = (id) => {\r\n        dispatch(getProfile(id))\r\n    }\r\n\r\n    const loadStatus = (id) => {\r\n        dispatch(getStatus(id))\r\n    }\r\n\r\n    const changeStatus = (status) => {\r\n        if (!isProfileCurrentUser) return\r\n        dispatch(updateStatus(status))\r\n    }\r\n\r\n    const changeImage = (image, userId) => {\r\n        dispatch(uploadImage(image, userId))\r\n    }\r\n\r\n    return <ProfileItemAPI profile={profile}\r\n                           currentUser={currentUser}\r\n                           id={selectedUserId}\r\n                           loggedInUserId={loggedInUserId}\r\n                           //isFetching={isFetching}\r\n                           goBack={goBack}\r\n                           loadProfile={loadProfile}\r\n                           status={status}\r\n                           loadStatus={loadStatus}\r\n                           changeStatus={changeStatus}\r\n                           changeImage={changeImage}\r\n                           isProfileCurrentUser={isProfileCurrentUser}\r\n    />\r\n}\r\n\r\nexport default ProfileItemContainer\r\n","import React from \"react\";\r\nimport styles from './Profile.module.css'\r\nimport PostListContainer from \"./PostList/PostListContainer\";\r\nimport ProfileItemContainer from \"./ProfileItem/ProfileItemContainer\";\r\n\r\nconst Profile = () => {\r\n\r\n    return (\r\n            <div className={styles.main}>\r\n                <ProfileItemContainer/>\r\n                <PostListContainer/>\r\n            </div>\r\n        )\r\n\r\n}\r\nexport default Profile;\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n        isFetching: state.auth.isFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Profile)*/\r\n\r\n/*export default function StoryTray({stories}) {\r\n\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                stories.map(story => (\r\n                        <li key={story.id}>\r\n                            {story.label}\r\n                        </li>\r\n                    )\r\n                )\r\n            }\r\n            <li>Create Story</li>\r\n        </ul>\r\n    );\r\n}*/\r\n\r\n\r\n/*\r\nconst recipes = [{\r\n    id: 'greek-salad',\r\n    name: 'Greek Salad',\r\n    ingredients: ['tomatoes', 'cucumber', 'onion', 'olives', 'feta']\r\n}, {\r\n    id: 'hawaiian-pizza',\r\n    name: 'Hawaiian Pizza',\r\n    ingredients: ['pizza crust', 'pizza sauce', 'mozzarella', 'ham', 'pineapple']\r\n}, {\r\n    id: 'hummus',\r\n    name: 'Hummus',\r\n    ingredients: ['chickpeas', 'olive oil', 'garlic cloves', 'lemon', 'tahini']\r\n}];\r\n\r\nconst poem = {\r\n    lines: [\r\n        'I write, erase, rewrite',\r\n        'Erase again, and then',\r\n        'A poppy blooms.'\r\n    ]\r\n};\r\n\r\n\r\nexport default function Poem() {\r\n    return (\r\n        <article>\r\n            {poem.lines.map((line, index) =>\r\n                <Fragment key={index}>\r\n                    <p >\r\n                        {line}\r\n                    </p>\r\n                    {(index > 0 || index !== poem.lines.length-1) && <hr/>}\r\n                </Fragment>\r\n            )}\r\n        </article>\r\n    );\r\n}*/\r\n/*\r\nconst RecipeListItem = ({recipe}) => {\r\n\r\n    return (\r\n        recipe.ingredients.map(ingredient => {\r\n\r\n            return <li key={ingredient}>\r\n                {ingredient}\r\n            </li>\r\n        })\r\n    )\r\n}\r\n\r\nexport default function Settings() {\r\n    return (\r\n        <div>\r\n            <h1>Recipes</h1>\r\n            { recipes.map(recipe => {\r\n                    return <div key={recipe.id}>\r\n                        <h2>{recipe.name}</h2>\r\n                        <ul>\r\n                            <RecipeListItem recipe={recipe}/>\r\n                        </ul>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}*/\r\n\r\n\r\n/*\r\nfunction Item({name, isPacked}) {\r\n\r\n//1) drawback: duplication of code (Conditionally returning JSX )\r\n/!*if (isPacked) {\r\nreturn <li className=\"item\">{name + ' ✔'}</li>;\r\n}\r\nreturn <li className=\"item\">{name}</li>;*!/\r\n\r\n// 2)drawback: Good for simple conditions (Conditionally including JSX: (ternary) operator (? :))\r\n/!* return <li className=\"item\">{\r\nisPacked ?\r\n(<del>{name + ' ✔'}</del>)\r\n: name\r\n}</li>*!/\r\n\r\n//3)drawback: cannot be used with numbers, since they are always true (Conditionally including JSX: Logical AND operator (&&)  )\r\n/!*return <li className=\"item\">\r\n{name} {isPacked && ' ✔'}\r\n</li>;*!/\r\n\r\n//4)drawback:This style is the most verbose, but it’s also the most flexible (Conditionally assigning JSX to a variable)\r\nlet itemContent = name;\r\n\r\nif (isPacked) {\r\nitemContent += ' ✔'\r\n}\r\nreturn <li className=\"item\">{itemContent}</li>;\r\n\r\n}\r\n\r\nexport default function PackingList() {\r\nreturn (\r\n<section>\r\n<h1>Sally Ride's Packing List</h1>\r\n<ul>\r\n<Item\r\nisPacked={true}\r\nname=\"Space suit\"\r\n/>\r\n<Item\r\nisPacked={true}\r\nname=\"Helmet with a golden leaf\"\r\n/>\r\n<Item\r\nisPacked={false}\r\nname=\"Photo of Tam\"\r\n/>\r\n</ul>\r\n</section>\r\n);\r\n}*/\r\n\r\n\r\n\r\n"],"names":["_ref","message","likes","_jsxs","className","styles","children","_jsx","maxLength5","maxLengthCreator","PostReduxForm","reduxForm","form","handleSubmit","postForm","onSubmit","Field","component","TextArea","name","validate","required","type","submitBtn","props","posts","addNewPost","_Fragment","data","postText","reverse","map","post","PostListItem","id","memo","dispatch","useDispatch","useSelector","state","profilePage","PostList","addPost","ProfileItemAPI","Component","componentDidMount","userId","this","loggedInUserId","loadProfile","loadStatus","render","profile","currentUser","status","auth","selectedUserId","useParams","isProfileCurrentUser","navigate","useNavigate","goBack","getProfile","getStatus","changeStatus","updateStatus","changeImage","image","uploadImage","Profile","ProfileItemContainer","PostListContainer"],"sourceRoot":""}